{
  "swagger": "2.0",
  "info": {
    "title": "AR Menu API",
    "description": "Api for AR Menu",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Add new category.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Pizza"
                },
                "description": {
                  "type": "string",
                  "example": "Pizza category"
                }
              },
              "required": [
                "name",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update category.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Pizza"
                },
                "description": {
                  "type": "string",
                  "example": "Pizza category"
                }
              },
              "required": [
                "name",
                "description"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/food/": {
      "get": {
        "tags": [
          "Food"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Food"
        ],
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "glb_file",
            "in": "formData",
            "type": "file",
            "description": "3D model (.glb)"
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "description": "Food image (png/jpg/jpeg)"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "description": "Name of the food",
            "required": true
          },
          {
            "name": "categoryId",
            "in": "formData",
            "type": "string",
            "description": "Category Id",
            "required": true
          },
          {
            "name": "ingredients",
            "in": "formData",
            "type": "array",
            "description": "Ingredients",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number",
            "description": "Price"
          },
          {
            "name": "is_vegetarian",
            "in": "formData",
            "type": "boolean",
            "description": "Is vegetarian"
          },
          {
            "name": "is_gluten_free",
            "in": "formData",
            "type": "boolean",
            "description": "Is gluten free"
          },
          {
            "name": "description",
            "in": "formData",
            "type": "string",
            "description": "Description of the food"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/food/{id}": {
      "get": {
        "tags": [
          "Food"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Food"
        ],
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "glb_file",
            "in": "formData",
            "type": "file",
            "description": "3D model (.glb)"
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "description": "Food image (png/jpg/jpeg)"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "description": "Name of the food",
            "required": true
          },
          {
            "name": "categoryId",
            "in": "formData",
            "type": "string",
            "description": "Category Id",
            "required": true
          },
          {
            "name": "ingredients",
            "in": "formData",
            "type": "array",
            "description": "Ingredients",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number",
            "description": "Price"
          },
          {
            "name": "is_vegetarian",
            "in": "formData",
            "type": "boolean",
            "description": "Is vegetarian"
          },
          {
            "name": "is_gluten_free",
            "in": "formData",
            "type": "boolean",
            "description": "Is gluten free"
          },
          {
            "name": "description",
            "in": "formData",
            "type": "string",
            "description": "Description of the food"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryId": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "model_url": {
                  "example": "any"
                },
                "image_url": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Food"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update user.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jane Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jane.doe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "87654321"
                },
                "userGroupId": {
                  "type": "string",
                  "example": "userGroupId"
                }
              },
              "required": [
                "name",
                "email",
                "password",
                "userGroupId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/check/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/userGroups/": {
      "get": {
        "tags": [
          "User Groups"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User Groups"
        ],
        "description": "",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Add new user group.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Viewer"
                },
                "privileges": {
                  "type": "object",
                  "properties": {
                    "canManageFood": {
                      "type": "boolean",
                      "example": false
                    },
                    "canManageCategory": {
                      "type": "boolean",
                      "example": false
                    },
                    "canManageUsers": {
                      "type": "boolean",
                      "example": false
                    },
                    "canManageUserGroups": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              },
              "required": [
                "name",
                "privileges"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/userGroups/{id}": {
      "get": {
        "tags": [
          "User Groups"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User Groups"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update user group.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Editor"
                },
                "privileges": {
                  "type": "object",
                  "properties": {
                    "canManageFood": {
                      "type": "boolean",
                      "example": true
                    },
                    "canManageCategory": {
                      "type": "boolean",
                      "example": true
                    },
                    "canManageUsers": {
                      "type": "boolean",
                      "example": false
                    },
                    "canManageUserGroups": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              },
              "required": [
                "name",
                "privileges"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User Groups"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-auth-token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/register/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Register a new user.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Aa12345678"
                },
                "userGroupId": {
                  "type": "string",
                  "example": "userGroupId"
                }
              },
              "required": [
                "name",
                "email",
                "password",
                "userGroupId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/auth/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Authenticate an existing user.",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Aa12345678"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}